{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\Spark 2025\\\\AI page\\\\ai-page\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './normalize.css';\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [chatlog, setChatLog] = useState([{\n    user: \"Bob\",\n    message: \"How can I help you today?\"\n  }, {\n    user: \"Me\",\n    message: \"I want to FARM! today\"\n  }]);\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setChatLog([...chatlog, {\n      user: \"me\",\n      message: `${input}`\n    }]);\n    setInput(\"\");\n    // FETCH RESPONSE FROM API and COMBINE with array of messages\n    const response = await fetch(\"http://localhost:3000\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: chatlog.map(message => message.message).join(\"\")\n      })\n    });\n    const data = await response;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sideMenu\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sideMenu-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" + \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), \"New Chat\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatlog\",\n        children: chatlog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbox-holder\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            rows: \"1\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            className: \"chatbox-text\",\n            placeholder: \"Type your message here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"867E3Rj95TQj7A5TcCMsdr2aveQ=\");\n_c = App;\nconst ChatMessage = ({\n  message\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-message ${message.user === \"Bob\" && \"llm\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-message-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `avatar ${message.user === \"Bob\" && \"llm\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ChatMessage;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ChatMessage\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","input","setInput","chatlog","setChatLog","user","message","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","map","join","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","ChatMessage","onSubmit","rows","value","onChange","target","placeholder","_c","_c2","$RefreshReg$"],"sources":["D:/Coding/Spark 2025/AI page/ai-page/src/App.js"],"sourcesContent":["import './normalize.css';\nimport './App.css';\nimport { useState } from 'react';\n\n\nfunction App() {\n\n  const [input, setInput] = useState(\"\");\n  const [chatlog, setChatLog] = useState([{\n    user: \"Bob\",\n    message: \"How can I help you today?\"\n  },{\n    user: \"Me\",\n    message: \"I want to FARM! today\"\n  }]);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setChatLog([...chatlog, { user: \"me\", message: `${input}`}]);\n    setInput(\"\");\n    // FETCH RESPONSE FROM API and COMBINE with array of messages\n    const response = await fetch(\"http://localhost:3000\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: chatlog.map((message) => message.message).join(\"\")\n      })\n    });\n    const data = await response\n  }\n\n  return (\n    <div className=\"App\">\n      <aside className=\"sideMenu\">\n        <div className=\"sideMenu-button\">\n          <span> + </span>\n          New Chat\n        </div>\n      </aside>\n      <section className=\"chatbox\">\n        <div className=\"chatlog\"> \n          {chatlog.map((message, index) => \n          <ChatMessage key={index} message={message}/>)}\n          \n\n          \n        </div>\n        <div className=\"chatbox-holder\">\n          <form onSubmit={handleSubmit}>\n            <input \n            rows=\"1\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            className=\"chatbox-text\"\n            placeholder=\"Type your message here\">\n            </input>\n          </form>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nconst ChatMessage = ({message}) => {\n  return (\n    <div className={`chat-message ${message.user === \"Bob\" && \"llm\"}`}>\n      <div className=\"chat-message-center\">\n        <div className={`avatar ${message.user === \"Bob\" && \"llm\"}`}>\n        \n        </div>\n        <div className=\"message\">\n          {message.message}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}